<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.mapper.JobtestMapper">

    <!--    전체 조회  -->
    <resultMap id="JobTestMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestListQueryDTO">
        <id property="id" column="job_test_id"/>
        <result property="title" column="job_test_title"/>
        <result property="difficulty" column="difficulty"
                typeHandler="com.piveguyz.empickbackend.employment.jobtests.common.typehandler.JobtestDifficultyTypeHandler"/>
        <result property="createdName" column="created_name"/>
        <result property="createMemberPictureUrl" column="created_member_picture_url"/>
        <result property="updatedName" column="updated_name"/>
        <result property="updatedMemberPictureUrl" column="updated_member_picture_url"/>

    </resultMap>


    <!--    상세조회  -->
    <!--    포함된 문제 정보-->
    <resultMap id="JobTestQuestionMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestQuestionQueryDTO">
        <id property="id" column="job_test_question_id"/>
        <result property="score" column="score"/>
        <result property="content" column="q_content"/>
        <result property="optionNumber" column="option_number"/>
        <result property="type" column="q_type"
                typeHandler="com.piveguyz.empickbackend.employment.jobtests.common.typehandler.QuestionTypeHandler"/>
        <result property="difficulty" column="q_difficulty"
                typeHandler="com.piveguyz.empickbackend.common.handler.JobtestDifficultyHandler"/>
        <result property="questionId" column="question_id"/>
    </resultMap>

    <resultMap id="JobTestEvalCriteriaMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestEvaluationCriteriaQueryDTO">
        <id property="id" column="criteria_id"/>
        <result property="content" column="criteria_content"/>
        <result property="detailContent" column="criteria_detail_content"/>
        <result property="scoreWeight" column="score_weight"/>
    </resultMap>


    <resultMap id="ApplicationInfoMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.ApplicationInfoDTO">
        <id property="applicationId" column="application_id"/>
        <result property="applicantId" column="applicant_id"/>
        <result property="applicantName" column="applicant_name"/>
        <result property="recruitmentTitle" column="recruitment_title"/>

        <result property="gradingStatus" column="g_status"
                typeHandler="com.piveguyz.empickbackend.common.handler.JobtestStatusHandler"/>
        <result property="gradingScore" column="g_score"/>
        <result property="gradingMemberName" column="g_member_name"/>

        <result property="evaluationStatus" column="e_status"
                typeHandler="com.piveguyz.empickbackend.common.handler.JobtestStatusHandler"/>
        <result property="evaluationScore" column="e_score"/>
        <result property="evaluationMemberName" column="e_member_name"/>

        <result property="applicationJobtestId" column="ajt_id"/>
    </resultMap>

    <resultMap id="JobTestApplicationsMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestQueryDTO">
        <id property="id" column="job_test_id"/>
        <result property="title" column="job_test_title"/>
        <result property="difficulty" column="difficulty"
                typeHandler="com.piveguyz.empickbackend.employment.jobtests.common.typehandler.JobtestDifficultyTypeHandler"/>

        <result property="testTime" column="test_time"/>
        <result property="startedAt" column="started_at"/>
        <result property="endedAt" column="ended_at"/>
        <result property="createdName" column="created_name"/>
        <result property="updatedName" column="updated_name"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>

        <collection property="questions" resultMap="JobTestQuestionMap"/>
        <collection property="evaluationCriteria" resultMap="JobTestEvalCriteriaMap"/>
        <collection property="applications" resultMap="ApplicationInfoMap"/>
    </resultMap>


    <!--    전체 실무테스트 목록 조회-->
    <select id="findAllJobTests" resultMap="JobTestMap">
        SELECT jt.id          AS job_test_id,
               jt.title       AS job_test_title,
               jt.difficulty,
               jt.test_time,
               jt.started_at,
               jt.ended_at,
               cm.name        AS created_name,
               cm.picture_url AS createMemberPictureUrl,
               um.name        AS updated_name,
               um.picture_url AS updatedMemberPictureUrl,
               jt.created_at,
               jt.updated_at
        FROM job_test jt
                 JOIN member cm ON jt.created_member_id = cm.id
                 LEFT JOIN member um ON jt.updated_member_id = um.id
        ORDER BY jt.created_at DESC
    </select>

    <!--    특정 실무테스트 조회-->
    <select id="findJobTestWithApplications" resultMap="JobTestApplicationsMap" parameterType="int">
        SELECT jt.id                   AS job_test_id,
               jt.title                AS job_test_title,
               jt.difficulty,
               jt.test_time,
               jt.started_at,
               jt.ended_at,

               cm.name                 AS created_name,
               um.name                 AS updated_name,
               jt.created_at,
               jt.updated_at,

               jtq.id                  AS job_test_question_id,
               jtq.score,
               jtq.option_number,
               jtq.question_id,

               q.type            AS q_type,
               q.difficulty            AS q_difficulty,
               q.content               AS q_content,

               jtec.id                 AS criteria_id,
               jtec.content            AS criteria_content,
               jtec.detail_content     AS criteria_detail_content,
               jtec.score_weight,

               a.id                    AS application_id,
               a.applicant_id,
               ap.name                 AS applicant_name,

               r.title                 AS recruitment_title,

               ajt.id                  AS ajt_id,
               ajt.grading_status      AS g_status,
               ajt.grading_total_score AS g_score,
               gm.name                 AS g_member_name,

               ajt.evaluation_status   AS e_status,
               ajt.evaluation_score    AS e_score,
               em.name                 AS e_member_name


        FROM job_test jt
#             작성자 정보
                 JOIN member cm ON jt.created_member_id = cm.id
                 LEFT JOIN member um ON jt.updated_member_id = um.id

#             실무테스트 문제
                 LEFT JOIN job_test_question jtq ON jtq.job_test_id = jt.id
                 LEFT JOIN question q ON jtq.question_id = q.id

#             지원서별 실무테스트
                 LEFT JOIN application_job_test ajt ON jt.id = ajt.job_test_id

#             실무테스트 평가 기준
                 LEFT JOIN job_test_evaluation_criteria jtec ON jtec.job_test_id = jt.id
                 LEFT JOIN member gm ON ajt.grading_member_id = gm.id
                 LEFT JOIN member em ON ajt.evaluation_member_id = em.id

#             지원서
                 LEFT JOIN application a ON a.id = ajt.application_id
                 LEFT JOIN applicant ap ON a.applicant_id = ap.id
                 LEFT JOIN recruitment r ON a.recruitment_id = r.id
        WHERE jt.id = #{id}
    </select>

    <!-- jobtestId로 started_at, ended_at 조회 -->
    <select id="selectStartedAndEndedAtById"
            parameterType="int"
            resultType="map">
        SELECT started_at, ended_at
        FROM job_test
        WHERE id = #{jobtestId}
    </select>

    <resultMap id="JobtestExamQueryMap"
               type="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestExamQueryDTO">
        <id property="jobtestId" column="jobtest_id"/>
        <result property="applicationJobTestId" column="application_job_test_id"/>
        <result property="title" column="title"/>
        <result property="testTime" column="test_time"/>
        <collection property="questions"
                    ofType="com.piveguyz.empickbackend.employment.jobtests.jobtest.query.dto.JobtestExamQuestionSummaryDTO">
            <id property="questionId" column="question_id"/>
            <result property="type" column="type"/>
            <result property="title" column="question_title"/>
            <result property="score" column="score"/>
            <!-- options 컬렉션 추가 -->
            <collection property="options"
                        ofType="com.piveguyz.empickbackend.employment.jobtests.question.query.dto.QuestionOptionDTO">
                <id property="id" column="option_id"/>
                <result property="optionNumber" column="option_number"/>
                <result property="content" column="option_content"/>
            </collection>
        </collection>
    </resultMap>

    <select id="selectJobtestExamQuery"
            resultMap="JobtestExamQueryMap"
            parameterType="map">
        SELECT
            jt.id     AS jobtest_id,
            ajt.id    AS application_job_test_id,
            jt.title,
            jt.test_time,
            jq.question_id,
            q.type,
            q.content AS question_title,
            jq.score,
            qo.id     AS option_id,
            qo.option_number,
            qo.content AS option_content
        FROM job_test jt
                 JOIN application_job_test ajt ON ajt.job_test_id = jt.id
                 JOIN job_test_question jq ON jq.job_test_id = jt.id
                 JOIN question q ON jq.question_id = q.id
                 LEFT JOIN question_option qo ON qo.question_id = q.id
        WHERE jt.id = #{jobtestId}
          AND ajt.id = #{applicationJobTestId}
        ORDER BY jq.id, qo.option_number
    </select>

</mapper>
